/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions, EventOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { Callback, ContractEvent, TransactionObject } from "./types";

export class ProxyFactoryData extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): ProxyFactoryData;
  methods: {
    deployMinimal(
      _logic: string,
      _data: string | number[]
    ): TransactionObject<string>;

    deploy(
      _salt: number | string,
      _logic: string,
      _admin: string,
      _data: string | number[]
    ): TransactionObject<string>;

    deploySigned(
      _salt: number | string,
      _logic: string,
      _admin: string,
      _data: string | number[],
      _signature: string | number[]
    ): TransactionObject<string>;

    getDeploymentAddress(
      _salt: number | string,
      _sender: string
    ): TransactionObject<string>;

    getSigner(
      _salt: number | string,
      _logic: string,
      _admin: string,
      _data: string | number[],
      _signature: string | number[]
    ): TransactionObject<string>;
  };
  events: {
    ProxyCreated: ContractEvent<string>;
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
