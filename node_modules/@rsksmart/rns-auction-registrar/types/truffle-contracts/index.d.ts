/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />
import { BigNumber } from "bignumber.js";

export interface TokenRegistrarDataContract
  extends Truffle.Contract<TokenRegistrarDataInstance> {
  "new"(
    _rns: string | BigNumber,
    _rootNode: string | BigNumber,
    _tokenAddr: string | BigNumber,
    meta?: Truffle.TransactionDetails
  ): Promise<TokenRegistrarDataInstance>;
}

export interface TokenRegistrarDataInstance extends Truffle.ContractInstance {
  rns(txDetails?: Truffle.TransactionDetails): Promise<string>;

  rootNode(txDetails?: Truffle.TransactionDetails): Promise<string>;

  sealedBids(
    arg0: string | BigNumber,
    arg1: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  tokenContract(txDetails?: Truffle.TransactionDetails): Promise<string>;

  startAuction: {
    (
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  startAuctions: {
    (
      _hashes: (string | BigNumber)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hashes: (string | BigNumber)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hashes: (string | BigNumber)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hashes: (string | BigNumber)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  newBid: {
    (
      _sealedBid: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _sealedBid: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _sealedBid: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _sealedBid: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  newBidWithToken: {
    (
      _from: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      _sealedBid: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _from: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      _sealedBid: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _from: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      _sealedBid: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      _sealedBid: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  startAuctionsAndBid: {
    (
      _hashes: (string | BigNumber)[],
      _sealedBid: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hashes: (string | BigNumber)[],
      _sealedBid: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hashes: (string | BigNumber)[],
      _sealedBid: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hashes: (string | BigNumber)[],
      _sealedBid: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  unsealBid: {
    (
      _hash: string | BigNumber,
      _value: number | BigNumber | string,
      _salt: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hash: string | BigNumber,
      _value: number | BigNumber | string,
      _salt: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hash: string | BigNumber,
      _value: number | BigNumber | string,
      _salt: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hash: string | BigNumber,
      _value: number | BigNumber | string,
      _salt: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  finalizeAuction: {
    (
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  transfer: {
    (
      _hash: string | BigNumber,
      _newOwner: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hash: string | BigNumber,
      _newOwner: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hash: string | BigNumber,
      _newOwner: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hash: string | BigNumber,
      _newOwner: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  releaseDeed: {
    (
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  eraseNode: {
    (
      _labels: (string | BigNumber)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _labels: (string | BigNumber)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _labels: (string | BigNumber)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _labels: (string | BigNumber)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  transferRegistrars: {
    (
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  payRent: {
    (
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  payRentWithToken: {
    (
      _from: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _from: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _from: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string | BigNumber,
      _tokenQuantity: number | BigNumber | string,
      _hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  acceptRegistrarTransfer: {
    (
      _hash: string | BigNumber,
      _deed: string | BigNumber,
      _registrationDate: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _hash: string | BigNumber,
      _deed: string | BigNumber,
      _registrationDate: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _hash: string | BigNumber,
      _deed: string | BigNumber,
      _registrationDate: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _hash: string | BigNumber,
      _deed: string | BigNumber,
      _registrationDate: number | BigNumber | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  state(
    _hash: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BigNumber>;

  entries(
    _hash: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[BigNumber, string, BigNumber, BigNumber, BigNumber]>;

  shaBid(
    _hash: string | BigNumber,
    _owner: string | BigNumber,
    _value: number | BigNumber | string,
    _salt: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  tokenFallback: {
    (
      _from: string | BigNumber,
      _value: number | BigNumber | string,
      _data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      _from: string | BigNumber,
      _value: number | BigNumber | string,
      _data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;
    sendTransaction(
      _from: string | BigNumber,
      _value: number | BigNumber | string,
      _data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string | BigNumber,
      _value: number | BigNumber | string,
      _data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };
}
