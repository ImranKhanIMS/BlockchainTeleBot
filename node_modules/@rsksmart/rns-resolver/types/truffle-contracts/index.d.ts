/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />
import { BigNumber } from "bignumber.js";

export interface AddrResolverDataContract
  extends Truffle.Contract<AddrResolverDataInstance> {
  "new"(
    rnsAddr: string | BigNumber,
    meta?: Truffle.TransactionDetails
  ): Promise<AddrResolverDataInstance>;
}

export interface ChainAddrResolverDataContract
  extends Truffle.Contract<ChainAddrResolverDataInstance> {
  "new"(
    _rns: string | BigNumber,
    _publicResolver: string | BigNumber,
    meta?: Truffle.TransactionDetails
  ): Promise<ChainAddrResolverDataInstance>;
}

export interface AddrResolverDataInstance extends Truffle.ContractInstance {
  has(
    node: string | BigNumber,
    kind: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  supportsInterface(
    interfaceID: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  addr(
    node: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  setAddr: {
    (
      node: string | BigNumber,
      addrValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      node: string | BigNumber,
      addrValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      node: string | BigNumber,
      addrValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      node: string | BigNumber,
      addrValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  content(
    node: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  setContent: {
    (
      node: string | BigNumber,
      hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      node: string | BigNumber,
      hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      node: string | BigNumber,
      hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      node: string | BigNumber,
      hash: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };
}

export interface ChainAddrResolverDataInstance
  extends Truffle.ContractInstance {
  supportsInterface(
    interfaceId: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  addr(
    node: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  setAddr: {
    (
      node: string | BigNumber,
      addrValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      node: string | BigNumber,
      addrValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      node: string | BigNumber,
      addrValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      node: string | BigNumber,
      addrValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  content(
    node: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  setContent: {
    (
      node: string | BigNumber,
      contentValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      node: string | BigNumber,
      contentValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      node: string | BigNumber,
      contentValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      node: string | BigNumber,
      contentValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  chainAddr(
    node: string | BigNumber,
    chain: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  setChainAddr: {
    (
      node: string | BigNumber,
      chain: string | BigNumber,
      addrValue: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      node: string | BigNumber,
      chain: string | BigNumber,
      addrValue: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      node: string | BigNumber,
      chain: string | BigNumber,
      addrValue: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      node: string | BigNumber,
      chain: string | BigNumber,
      addrValue: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  chainMetadata(
    node: string | BigNumber,
    chain: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  setChainMetadata: {
    (
      node: string | BigNumber,
      chain: string | BigNumber,
      metadataValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      node: string | BigNumber,
      chain: string | BigNumber,
      metadataValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      node: string | BigNumber,
      chain: string | BigNumber,
      metadataValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      node: string | BigNumber,
      chain: string | BigNumber,
      metadataValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  chainAddrAndMetadata(
    node: string | BigNumber,
    chain: string | BigNumber,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[string, string]>;

  setChainAddrWithMetadata: {
    (
      node: string | BigNumber,
      chain: string | BigNumber,
      addrValue: string,
      metadataValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse>;
    call(
      node: string | BigNumber,
      chain: string | BigNumber,
      addrValue: string,
      metadataValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      node: string | BigNumber,
      chain: string | BigNumber,
      addrValue: string,
      metadataValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      node: string | BigNumber,
      chain: string | BigNumber,
      addrValue: string,
      metadataValue: string | BigNumber,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };
}
